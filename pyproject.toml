[project]
name = "difi"
dynamic = ["version"]
authors = [
    {name = "Joachim Moeyens", email = "moeyensj@uw.edu"},
]
maintainers = [
    {name = "Joachim Moeyens", email = "moeyensj@uw.edu"},
]
description = "Did I Find It?"
readme = "README.md"
license = {file = "LICENSE.md"}
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Astronomy",
    "Topic :: Scientific/Engineering :: Physics",
]
keywords = [
    "astronomy",
    "astrophysics",
    "space",
    "science",
    "asteroids",
    "comets",
    "solar system"
]

dependencies = [
    "numba",
    "numpy",
    "pandas",
    "pyarrow",
    "quivr==0.7.4a2",
]

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"
[tool.pdm.build]
includes = ["src/difi/"]

[tool.pdm.version]
source = "scm"
write_to = "difi/_version.py"
write_template = "__version__ = '{}'"

[tool.pdm.scripts]
check = { composite = ["lint", "typecheck", "test"] }
format = { composite = ["black ./src/difi", "isort ./src/difi"] }
lint = { composite = [
  "ruff check ./src/difi",
  "black --check ./src/difi",
  "isort --check-only ./src/difi",
] }
fix = "ruff ./src/difi --fix"
typecheck = "mypy --strict ./src/difi"

test = "pytest --benchmark-disable {args}"
doctest = "pytest --doctest-plus --doctest-only"
benchmark = "pytest --benchmark-only"
coverage = "pytest --cov=difi --cov-report=xml"

[project.urls]
"Documentation" = "https://github.com/moeyensj/difi#README.md"
"Issues" = "https://github.com/moeyensj/difi/issues"
"Source" = "https://github.com/moeyensj/difi"

[project.optional-dependencies]
dev = [
  "black",
  "ipython",
  "isort",
  "mypy",
  "pdm",
  "pytest-benchmark",
  "pytest-cov",
  "pytest-doctestplus",
  "pytest-mock",
  "pytest",
  "ruff",
]

[tool.black]
line-length = 110

[tool.isort]
profile = "black"

[tool.ruff]
line-length = 110
target-version = "py311"
lint.ignore = []
exclude = ["build"]

[tool.mypy]
ignore_missing_imports = true
